{"metadata": {"forum_id": "Ske31kBtPr", "review_id": "HJl5cVvoYS", "rebuttal_id": "H1g9CATusr", "title": "Mathematical Reasoning in Latent Space", "reviewer": "AnonReviewer1", "rating": 8, "conference": "ICLR2020", "permalink": "https://openreview.net/forum?id=Ske31kBtPr&noteId=H1g9CATusr", "annotator": "anno10"}, "review_sentences": [{"review_id": "HJl5cVvoYS", "sentence_index": 0, "text": "= Summary", "coarse": "arg_structuring", "fine": "arg-structuring_heading", "asp": "none", "pol": "none"}, {"review_id": "HJl5cVvoYS", "sentence_index": 1, "text": "Embeddings of mathematical theorems and rewrite rules are presented.", "coarse": "arg_structuring", "fine": "arg-structuring_summary", "asp": "none", "pol": "none"}, {"review_id": "HJl5cVvoYS", "sentence_index": 2, "text": "An in-depth analysis of the resulting embeddings is presented, showing that a network can learn to \"apply\" embedded rewrite rules to embedded theorems, yielding results that are similar to the embedding of the rewritten theorem.", "coarse": "arg_structuring", "fine": "arg-structuring_summary", "asp": "none", "pol": "none"}, {"review_id": "HJl5cVvoYS", "sentence_index": 3, "text": "[i.e., app'(emb(thm), emb(rule)) is near to emb(app(thm, rule))] This is an interesting property for the application of deep learning to automated theorem proving, though not directly a breakthrough result.", "coarse": "arg_structuring", "fine": "arg-structuring_summary", "asp": "none", "pol": "none"}, {"review_id": "HJl5cVvoYS", "sentence_index": 4, "text": "= Strong/Weak Points", "coarse": "arg_structuring", "fine": "arg-structuring_heading", "asp": "none", "pol": "none"}, {"review_id": "HJl5cVvoYS", "sentence_index": 5, "text": "+ Simply a cute result, showing that proof search can remain in embedding space for a limited time horizon without having to switch back into the theorem prover environment.", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_originality", "pol": "pol_positive"}, {"review_id": "HJl5cVvoYS", "sentence_index": 6, "text": "+ Nicely designed experiments testing this (somewhat surprising) property empirically", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_substance", "pol": "pol_positive"}, {"review_id": "HJl5cVvoYS", "sentence_index": 7, "text": "- Missed opportunity of better analysis of which theorem/rewrite rule properties are more likely to fail", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_substance", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 8, "text": "- Writing sometimes a bit overcomplicated (e.g., Sect. 4.5 could just be a figure of a commuting diagram and two sentences...)", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_clarity", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 9, "text": "- Architecture choice unclear: Why are $\\sigma$ and $\\omega$ separate networks.", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_replicability", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 10, "text": "This is discussed on p4, but it's unclear to me how keeping $\\sigma$ separate is benefitial for the analysis, and this is not picked up again explicitly again?", "coarse": "arg_request", "fine": "arg-request_explanation", "asp": "asp_clarity", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 11, "text": "= Recommendation", "coarse": "arg_structuring", "fine": "arg-structuring_heading", "asp": "none", "pol": "none"}, {"review_id": "HJl5cVvoYS", "sentence_index": 12, "text": "Overall, this is a nice, somewhat surprising result.", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_substance", "pol": "pol_positive"}, {"review_id": "HJl5cVvoYS", "sentence_index": 13, "text": "The writing and experiments could use some improvement, but I believe that the majority of the ICLR audience would enjoy seeing this result (even though it would have no impact on most people's research)", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_substance", "pol": "pol_positive"}, {"review_id": "HJl5cVvoYS", "sentence_index": 14, "text": "= Detailed Comments", "coarse": "arg_structuring", "fine": "arg-structuring_heading", "asp": "none", "pol": "none"}, {"review_id": "HJl5cVvoYS", "sentence_index": 15, "text": "- page 4, Sect. 4.4: Architecture of $\\alpha$ would be nice (more than a linear layer?)", "coarse": "arg_request", "fine": "arg-request_explanation", "asp": "asp_replicability", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 16, "text": "- page 5, paragraph 3: \"we from some\" -> \"we start from some\"", "coarse": "arg_request", "fine": "arg-request_typo", "asp": "asp_clarity", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 17, "text": "- p6par1: \"much cheaper then computing\" -> than", "coarse": "arg_request", "fine": "arg-request_typo", "asp": "asp_clarity", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 18, "text": "- p6par6: \"on formulas that with\" -> no that", "coarse": "arg_request", "fine": "arg-request_typo", "asp": "asp_clarity", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 19, "text": "- p6par7: \"measure how rate\" -> \"measure the rate\"", "coarse": "arg_request", "fine": "arg-request_typo", "asp": "asp_clarity", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 20, "text": "- p8par1: \"approximate embedding $\\alpha(e(\\gamma'(...)))$ - $e$ is undefined and should probably be $e'$ (this is also the case in the caption of Fig. 5), and $c'$ should probably be included as well.", "coarse": "arg_request", "fine": "arg-request_edit", "asp": "asp_soundness-correctness", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 21, "text": "However, I don't understand the use of $\\alpha$ here.", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_clarity", "pol": "pol_negative"}, {"review_id": "HJl5cVvoYS", "sentence_index": 22, "text": "If Fig. 4 is following Fig. 3 in considering $p(c(\\gamma(T), \\pi(P)))$, then Fig. 4 should plot the performance of, e.g., $p(c(e'(c'(\\gamma'(T_{i-1}), \\pi'(P_{i-1}))), \\pi(P_i)))$ (i.e., $p$ applied to approximate embedding of $T_i$ and (\"true\") embedding of $P_i$).", "coarse": "arg_fact", "fine": "none", "asp": "none", "pol": "none"}, {"review_id": "HJl5cVvoYS", "sentence_index": 23, "text": "I believe that's what \"Pred (One Step)\" expresses, but it would maybe be generally helpful to be more precise about the notation in Sect. 6.", "coarse": "arg_request", "fine": "arg-request_edit", "asp": "asp_clarity", "pol": "pol_negative"}], "rebuttal_sentences": [{"review_id": "HJl5cVvoYS", "rebuttal_id": "H1g9CATusr", "sentence_index": 0, "text": "We thank the reviewer for the great feedback.", "coarse": "nonarg", "fine": "rebuttal_social", "alignment": ["context_global", null]}, {"review_id": "HJl5cVvoYS", "rebuttal_id": "H1g9CATusr", "sentence_index": 1, "text": "We have simplified the architecture described in the paper by combining the networks $\\sigma$ and $\\omega$, and included the results from this architecture as well, producing a more robust architecture that performs better for multiple rewrite steps (while keeping the original, more complicated solution as one of the baselines).", "coarse": "concur", "fine": "rebuttal_done", "alignment": ["context_sentences", [9, 10]]}, {"review_id": "HJl5cVvoYS", "rebuttal_id": "H1g9CATusr", "sentence_index": 2, "text": "As suggested, we have added further analysis of failure cases.", "coarse": "concur", "fine": "rebuttal_done", "alignment": ["context_sentences", [7]]}, {"review_id": "HJl5cVvoYS", "rebuttal_id": "H1g9CATusr", "sentence_index": 3, "text": "We also corrected the typos and clarified the definitions of True, Pred (One Step) and Pred (Multi Step) variants.", "coarse": "concur", "fine": "rebuttal_done", "alignment": ["context_global", null]}, {"review_id": "HJl5cVvoYS", "rebuttal_id": "H1g9CATusr", "sentence_index": 4, "text": "We are very grateful for the review that helped to improve the paper significantly.", "coarse": "nonarg", "fine": "rebuttal_social", "alignment": ["context_global", null]}]}