{"metadata": {"forum_id": "Bke6vTVYwH", "review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "title": "Graph convolutional networks for learning with few clean and many noisy labels", "reviewer": "AnonReviewer3", "rating": 6, "conference": "ICLR2020", "permalink": "https://openreview.net/forum?id=Bke6vTVYwH&noteId=HkgHcqLVoH", "annotator": "anno10"}, "review_sentences": [{"review_id": "SylESLC6Fr", "sentence_index": 0, "text": "This paper studies the problem of learning from multiple tasks and additional noisy data.", "coarse": "arg_structuring", "fine": "arg-structuring_summary", "asp": "none", "pol": "none"}, {"review_id": "SylESLC6Fr", "sentence_index": 1, "text": "The proposed representation learning method first assigns each noisy data a relevance score using the topological information.", "coarse": "arg_structuring", "fine": "arg-structuring_summary", "asp": "none", "pol": "none"}, {"review_id": "SylESLC6Fr", "sentence_index": 2, "text": "Then the authors propose to minimize a combination of the loss of a class-prototype learning loss and a cosine classifier learning loss to learn a good representation generator g_theta.", "coarse": "arg_structuring", "fine": "arg-structuring_summary", "asp": "none", "pol": "none"}, {"review_id": "SylESLC6Fr", "sentence_index": 3, "text": "The empirical study validates the effectiveness of the proposed method.", "coarse": "arg_structuring", "fine": "arg-structuring_summary", "asp": "none", "pol": "none"}, {"review_id": "SylESLC6Fr", "sentence_index": 4, "text": "I have the following comments,", "coarse": "arg_structuring", "fine": "arg-structuring_summary", "asp": "none", "pol": "none"}, {"review_id": "SylESLC6Fr", "sentence_index": 5, "text": "1. The studied problem that learning from few-shot data and large-scale noisy data is interesting. According to the experimental results, the proposed method seems to be promising.", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_substance", "pol": "pol_positive"}, {"review_id": "SylESLC6Fr", "sentence_index": 6, "text": "2. The learning procedure is confusing.", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_replicability", "pol": "pol_negative"}, {"review_id": "SylESLC6Fr", "sentence_index": 7, "text": "It is highly recommended to provide the pseudocode of the proposed method.", "coarse": "arg_evaluative", "fine": "none", "asp": "asp_replicability", "pol": "pol_negative"}, {"review_id": "SylESLC6Fr", "sentence_index": 8, "text": "3. Since there are many tasks and each task has a large-scale data, I'm afraid that the running time will explode. How to deal with this issue?", "coarse": "arg_request", "fine": "arg-request_clarification", "asp": "asp_soundness-correctness", "pol": "pol_negative"}], "rebuttal_sentences": [{"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 0, "text": "We would like to thank the reviewer for the positive feedback.", "coarse": "nonarg", "fine": "rebuttal_social", "alignment": ["context_global", null]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 1, "text": "We reply to the the two questions below.", "coarse": "nonarg", "fine": "rebuttal_structuring", "alignment": ["context_in-rebuttal", null]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 2, "text": "Q1: The learning procedure is confusing. It is highly recommended to provide the pseudocode of the proposed method.", "coarse": "nonarg", "fine": "rebuttal_structuring", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 3, "text": "R1: We will provide the pseudocode in the future versions of the paper:", "coarse": "concur", "fine": "rebuttal_by-cr", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 4, "text": "Training:", "coarse": "nonarg", "fine": "rebuttal_structuring", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 5, "text": "X_L : clean set", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 6, "text": "C_L : class set", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 7, "text": "X_Z : noisy set", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 8, "text": "# For each class name", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 9, "text": "For c in C_L:", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 10, "text": "#Take the clean examples belonging to this class", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 11, "text": "X_L^c : subset of X_L with label c", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 12, "text": "#Only consider noisy examples with the class name in the text", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 13, "text": "X_Z^c = filter_by_text(X_Z)", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 14, "text": "# Build the graph for this class, and learn the GCN for cleaning", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 15, "text": "A^c = build_graph(X_Z^c)", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 16, "text": "M^c = GCN_model(X_L^c, X_Z^c, A^c)", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 17, "text": "#Clean examples always get weight 1", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 18, "text": "for i in X_L^c:", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 19, "text": "r_i = 1.0", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 20, "text": "#Noisy examples get the learned weight", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 21, "text": "for i in X_Z^c:", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 22, "text": "r_i = assign_relevance(M^c(X_Z^c(i))", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 23, "text": "#Add the noisy examples to the list of training images for this class", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 24, "text": "X_L^c = concatenate(X_L^c, X_z^c)", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 25, "text": "#Learn a classifier jointly for all classes.", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 26, "text": "Use the relevance weights for noisy examples when learning the classifier", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 27, "text": "W = train_classifier(X_L^c, r)", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 28, "text": "Testing", "coarse": "nonarg", "fine": "rebuttal_structuring", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 29, "text": "Given test image Q", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 30, "text": "v = extract_feature(Q)", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 31, "text": "scores = W^T v", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 32, "text": "prediction = argmax(scores)", "coarse": "nonarg", "fine": "rebuttal_summary", "alignment": ["context_sentences", [6, 7]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 33, "text": "Q2: Since there are many tasks and each task has a large-scale data, I'm afraid that the running time will explode. How to deal with this issue?", "coarse": "nonarg", "fine": "rebuttal_structuring", "alignment": ["context_sentences", [8]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 34, "text": "R2: The complexity is linear in the number of classes, since classes are processed independently.", "coarse": "concur", "fine": "rebuttal_answer", "alignment": ["context_sentences", [8]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 35, "text": "Furthermore, text filtering is applied before cleaning, which reduces the number of images to be considered for a given class.", "coarse": "concur", "fine": "rebuttal_answer", "alignment": ["context_sentences", [8]]}, {"review_id": "SylESLC6Fr", "rebuttal_id": "HkgHcqLVoH", "sentence_index": 36, "text": "Please also see the response R1 to reviewer1.", "coarse": "concur", "fine": "rebuttal_answer", "alignment": ["context_sentences", [8]]}]}